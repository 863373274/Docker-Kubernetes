version: "1.0.0.20190408092100"
version2: "helloworld"
#Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8100
  servlet:
    context-path: /sscp-antipass

spring:
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_null
  redis:
    database: 0
#    host: redis-ha
#    port: 6379
    password:       # 密码（默认为空）
    timeout: 20000   # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 200  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms    # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 16      # 连接池中的最大空闲连接
        min-idle: 8       # 连接池中的最小空闲连接
    sentinel:
      master: mymaster
      nodes:
      - redis-ha-test-announce-0:26379
      - redis-ha-test-announce-1:26379
      - redis-ha-test-announce-2:26379
  klock:
    address: redis://redis-ha-test-announce-0:26379,redis://redis-ha-test-announce-1:26379,redis://redis-ha-test-announce-2:26379
  #  kafka:
  #    producer:
  #      bootstrap-servers: kafka:9092
  #      retries: 0
  #      batch-size: 16384
  #      buffer-memory: 33554432
  ##      key-serializer: org.apache.kafka.common.serialization.StringSerializer
  ##      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  #      tap-resp: sscp-journey-resp
  #    consumer:
  #      bootstrap-servers: 47.52.25.80:9092
  #      group-id: journey-group
  #      auto-offset-reset: earliest
  #      enable-auto-commit: true
  #      auto-commit-interval: 100
  ##      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  ##      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      session-timeout: 6000
  #      concurrency: 1
  #      topic:
  #        default: second
  #        tap-req: sscp-journey-req

logging:
  level:
    org.springframework.cloud.netflix.feign: debug
    com.pci.antipass.client.*: debug

ribbon:
  # 连接超时时间
  ConnectTimeout: 30000
  # 通信超时时间
  ReadTimeout: 30000
  # 是否对所有操作重试
  OkToRetryOnAllOperations: true
  # 同一服务不同实例的重试次数
  MaxAutoRetriesNextServer: 2
  # 同一实例的重试次数
  MaxAutoRetries: 1

param:
  # antipass版本号
  version: 1.0.0.20190321
  # 设置GRK时间区间(单位:毫秒)内不许重复刷码是：1秒内（等于1秒）
  repeatTapDenyingInterval: 1000
  # 多少分钟内允许多次进站的时间区间(单位:毫秒)是：0~2分钟（等于2分钟）
  multiEntryAllowInterval: 120000
  # 允许多次进站的次数是：1次
  multiEntryTapLimit: 1
  # 相同站点不允许多次进站的时间区间(单位:毫秒)是：2~30分钟（等于30分钟）
  multiEntryDenyInterval: 1800000
  # 不同站点不允许多次进站的的时间区间(单位:毫秒)是：0~15分钟（等于15分钟）
  multiEntryTimeApartBtwStations: 900000
  # 乘客在付费区补录进站记录后，允许乘客离开车站的缓冲时间区间(单位:毫秒)是：0~16分钟（等于16分钟）
  manualFixExitBuffer: 960000
  # 禁止乘客手工补录进站，刷码出站后，继续补录进站的时间区间(单位:毫秒)是：0~6分钟（等于6分钟）
  manualFixDenyingInterval: 360000
  # nak有效期(单位:毫秒)，nak上传后，6分钟内有效
  nakValidityPeriod: 360000
  # 同站进出最小时间间隔(单位:毫秒)：1分钟
  sameStationInboundAndOutboundMinimumInterval: 60000
  # 禁止乘客手工补录进站，没有出站，继续补录进站的时间区间(单位:毫秒)是：0-16分钟（等于16分钟）
  manualContinuousFixDenyingInterval: 960000
  # 允许乘客撤销的时间阈值(单位:毫秒)(可撤销有效期，即多久之内可以撤销。30分钟有效期)
  reversibleValidityPeriod: 1800000
  # 待在站内的最小时间
  # 出站拒绝记录有效期(单位:分钟)，默认：6分钟
  tapOutRejectRecordValidityPeriod: 6
  # 补录通知有效期(单位:分钟)，默认：6分钟
  tapSupplementNotifyValidityPeriod: 6
  # 出站有效期(单位：毫秒)，默认：6分钟，6*60*1000L
  tapOutValidityPeriod: 360000


